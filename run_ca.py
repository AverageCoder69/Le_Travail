#!/usr/bin/env python3
"""
Cr√©dit Agricole Jobs - Alpha 0.1.0
Script de d√©marrage principal

Pour lancer l'application:
    python run_ca.py

URLs disponibles:
- Interface principale: http://localhost:5002
- Carte interactive: http://localhost:5002/carte  
- API jobs: http://localhost:5002/jobs
- Statistiques: http://localhost:5002/stats
"""

import os
import sys
import subprocess

def check_dependencies():
    """V√©rifie que les d√©pendances sont install√©es"""
    try:
        import flask
        import bs4
        print("‚úÖ D√©pendances Python OK")
    except ImportError as e:
        print(f"‚ùå D√©pendance manquante: {e}")
        print("üì¶ Installation requise:")
        print("   pip install flask beautifulsoup4")
        return False
    
    # V√©rifier wget
    try:
        subprocess.run(['wget', '--version'], capture_output=True, check=True)
        print("‚úÖ wget OK")
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("‚ùå wget non trouv√©")
        print("üì¶ Installation requise:")
        print("   - macOS: brew install wget")
        print("   - Ubuntu: sudo apt install wget")
        print("   - Windows: https://eternallybored.org/misc/wget/")
        return False
    
    return True

def initial_scrape():
    """Lance le scraping initial si jobs_ca.json n'existe pas"""
    jobs_file = os.path.join(os.path.dirname(__file__), 'jobs_ca.json')
    
    if not os.path.exists(jobs_file):
        print("üîç Premi√®re ex√©cution - Scraping des offres Cr√©dit Agricole...")
        print("‚è∞ Cela peut prendre plusieurs minutes (320+ offres)...")
        try:
            result = subprocess.run([sys.executable, 'scrapper_ca_v2.py'], 
                                  capture_output=True, text=True, timeout=600)  # 10 minutes
            if result.returncode == 0:
                print("‚úÖ Scraping initial termin√©")
                print(result.stdout)
            else:
                print(f"‚ùå Erreur lors du scraping: {result.stderr}")
                return False
        except subprocess.TimeoutExpired:
            print("‚è∞ Timeout lors du scraping initial (10 min)")
            return False
        except Exception as e:
            print(f"‚ùå Erreur: {e}")
            return False
    else:
        print("‚úÖ Fichier jobs_ca.json existant trouv√©")
    
    return True

def main():
    """Fonction principale"""
    print("üè¶ Cr√©dit Agricole Jobs - Alpha 0.1.0")
    print("=" * 50)
    
    # V√©rifier les d√©pendances
    if not check_dependencies():
        print("\n‚ùå Veuillez installer les d√©pendances manquantes")
        sys.exit(1)
    
    # Scraping initial si n√©cessaire
    if not initial_scrape():
        print("\n‚ùå Impossible de d√©marrer sans donn√©es")
        sys.exit(1)
    
    # Lancer l'application Flask
    print("\nüåê D√©marrage du serveur web...")
    print("üìç Interface: http://localhost:5002")
    print("üó∫Ô∏è  Carte: http://localhost:5002/carte")
    try:
        from app_ca import app
        app.run(debug=False, host='0.0.0.0', port=5002)
    except KeyboardInterrupt:
        print("\nüëã Arr√™t du serveur")
    except Exception as e:
        print(f"\n‚ùå Erreur lors du d√©marrage: {e}")
        sys.exit(1)

if __name__ == '__main__':
    main()